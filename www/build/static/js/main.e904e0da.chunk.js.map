{"version":3,"sources":["request/index.js","components/Message.js","pages/Login.js","pages/home/OverView.js","request/api.js","pages/home/Workbench.js","pages/home/Article/ArticleList.js","pages/home/Article/SortComponents/addSortModal.js","pages/home/Article/SortManagement.js","pages/home/Article/TagsComponents/Dtag/index.js","pages/home/Article/TagsComponents/AddTagModal.js","pages/home/Article/TagsComponents/EditTagModal.js","pages/home/Article/TagsManagement.js","pages/home/HomeRouter.js","pages/Home.js","pages/Main.js","App.js","index.js"],"names":["axios","interceptors","request","use","config","token","sessionStorage","headers","error","Promise","reject","response","status","data","success","entity","removeItem","localStorage","window","location","href","console","Message","props","type","info","onClose","message","content","className","icon","CheckCircleOutlined","undefined","warning","ExclamationCircleOutlined","CloseCircleOutlined","Login","Form","useForm","loginFrom","form","name","label","onFinish","values","method","url","then","res","log","setItem","res2","JSON","stringify","history","replace","onFinishFailed","errorInfo","Item","rules","required","max","pattern","whitespace","Password","htmlType","onClick","resetFields","OverView","baseUrl1","api","article","getTypeList","params","get","addType","post","deleteType","getTagsList","addTag","deleteTag","getList","add","delete","tagRender","closable","color","parseInt","Math","random","style","marginRight","Workbench","useState","typeListData","setTypeListData","tagsListData","setTagsListData","title","setTitle","typeData","setTypeData","tagsData","setTagsData","createData","setCreateData","introduce","setIntroduce","setContent","mardedContent","setMardedContent","useEffect","documentKeyEventMonitor","getTypeListData","getTagsListData","componentWillUnmount","document","onkeydown","event","ctrlKey","keyCode","alert","resData","parse","list","length","map","item","tid","type_name","idx","value","gid","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","highlight","code","hljs","highlightAuto","gutter","span","onChange","e","target","placeholder","width","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","type_id","Option","key","TextArea","rows","html","onKeyDown","preventDefault","body","dangerouslySetInnerHTML","__html","ghost","test","requiredParams","Modal","confirm","IssuesCloseOutlined","onOk","push","onCancel","mode","options","tags","date","dateString","ArticleList","tableData","setTableData","currentPage","setCurrentPage","pageSize","setPageSize","getTableListData","aid","create_time","view_count","offset","marginBottom","SearchOutlined","ReloadOutlined","direction","size","PlusOutlined","rowKey","record","columns","dataIndex","render","text","tag","toUpperCase","rowData","deleteArticle","dataSource","pagination","showQuickJumper","showSizeChanger","current","pageSizeOptions","showTotal","total","page","onShowSizeChange","bordered","CollectionCreateForm","aaa","visible","onCreate","okText","cancelText","validateFields","catch","warn","layout","SortManagement","sortListData","setSortListData","isShowAddModal","setIsShowAddModal","getListData","a","description","card","hoverable","actions","typeInfo","EditOutlined","DeleteOutlined","image","Empty","PRESENTED_IMAGE_SIMPLE","Dtag","relevancy","editTag","trigger","placement","arrowPointAtCenter","danger","count","marginLeft","backgroundColor","AddTagModal","editTagData","initialValue","TagsManagement","tagsList","setTagsList","isShowEditModal","setIsShowEditModal","editDataTo","setEditDataTo","tagData","EditTagModal","HomeRouter","path","component","Home","userInfo","setUserInfo","userData","getItem","headerDropMenuNode","Sider","breakpoint","collapsedWidth","theme","defaultSelectedKeys","AppstoreOutlined","to","FormOutlined","SubMenu","DiffOutlined","UserOutlined","BoldOutlined","Header","padding","src","overlay","nickname","DownOutlined","Content","margin","Footer","textAlign","Main","exact","App","ReactDOM","locale","getElementById"],"mappings":"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","file":"static/js/main.e904e0da.chunk.js","sourcesContent":["/**\r\n * @description: axios插件封装\r\n * @Date Changed: 2020-08-06\r\n */\r\nimport axios from \"axios\";\r\n\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        let token = sessionStorage.token;\r\n        if (token) {\r\n            config.headers.token = token;\r\n        }\r\n\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// // 添加响应拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        // console.log( response );\r\n        if (response.status === 200) {\r\n            if (response.data) {\r\n                // setTimeout(() => {\r\n                //     endLoading();\r\n                // }, 500);\r\n                if (!response.data.success && response.data.entity && response.data.entity.token === -1) {\r\n                    \r\n                    // 清除缓存，跳转到登录页\r\n                    sessionStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"userInfo\");\r\n                    window.location.href=\"/\";\r\n\r\n                }else{\r\n\r\n                    return response.data;\r\n                }\r\n            } else {\r\n                return response;\r\n            }\r\n        } else {\r\n            console.error(`网络错误!(${response.status})`)\r\n        }\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axios;\r\n","import React from 'react';\r\nimport { message } from 'antd';\r\nimport { CheckCircleOutlined, ExclamationCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nconst Message = (props) => {\r\n    const {type,info, onClose} = props;\r\n    \r\n    switch(type){\r\n        case 'success':\r\n            message.success({\r\n                content: info,\r\n                className: \"message_success\",\r\n                icon: <CheckCircleOutlined />,\r\n                onClose: ()=>{\r\n                    onClose !== undefined && onClose();\r\n                }\r\n            });\r\n            break;\r\n        case 'warning':\r\n            message.warning({\r\n                content: info,\r\n                className: \"message_warning\",\r\n                icon: <ExclamationCircleOutlined />\r\n            });\r\n            break;\r\n        case 'error':\r\n            message.error({\r\n                content: info,\r\n                className: \"message_error\",\r\n                icon: <CloseCircleOutlined />\r\n            });\r\n            break;\r\n        default:\r\n            console.error(\"Message组件只允许【success、warning、error】类型提示！\");\r\n            break;\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport '../static/css/Login.less';\r\n\r\nimport axios from './../request'\r\nimport Message from '../components/Message';\r\n\r\nconst Login = props => {\r\n    const [loginFrom] = Form.useForm();\r\n\r\n    const onFinish = values => {\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: \"http://localhost:4400/backstage/admin/login\",\r\n            data: values,\r\n            // withCredentials: true\r\n        }).then(res=>{\r\n            console.log( \"登陆成功响应：\",res );\r\n            if(res.success){\r\n                let token = res.entity.token || \"\";\r\n                \r\n                sessionStorage.setItem(\"token\", token);\r\n\r\n                axios({\r\n                    method: 'get',\r\n                    url: \"http://localhost:4400/backstage/admin/queryInfo\",\r\n                }).then(res2=>{\r\n                    console.log(\"获取管理员数据：\",res2);\r\n                    if(res2.success){\r\n\r\n                        localStorage.setItem(\"userInfo\",JSON.stringify(res2.entity));\r\n\r\n                        Message({\r\n                            type: \"success\",\r\n                            info: \"登陆成功！\"\r\n                        });\r\n\r\n                        props.history.replace(\"/home/overView\");\r\n\r\n                    }\r\n                })\r\n\r\n                \r\n\r\n            }else{\r\n                Message({\r\n                    type: \"error\",\r\n                    info: `登陆失败！${res.message}`\r\n                })\r\n            }\r\n        })\r\n\r\n        \r\n\r\n        \r\n\r\n        // if(true){\r\n        //     Message({\r\n        //         type: \"success\",\r\n        //         info: \"登陆成功！\"\r\n        //     }); \r\n        // }else{\r\n        //     Message({\r\n        //         type: \"error\",\r\n        //         info: \"登陆失败!\"\r\n        //     });\r\n        // }\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('失败:', errorInfo);\r\n    };\r\n\r\n    const onReset = () => {\r\n        loginFrom.resetFields();\r\n    };\r\n    return (\r\n        <div className=\"login-div\">\r\n\r\n            <Form\r\n                form={loginFrom}\r\n                name=\"loginForm\"\r\n                label=\"Form Size\"\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}>\r\n                <Form.Item\r\n                    label=\"账号\"\r\n                    name=\"username\"\r\n                    rules={\r\n                        [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入用户名！',\r\n                            },\r\n                            {\r\n                                max: 20,\r\n                                message: '最大长度20位！'\r\n                            },\r\n                            {\r\n                                pattern: /^[0-9a-zA-Z_]+$/,\r\n                                message: '账号仅包含大写字母、小写字母、数字、_'\r\n                            },\r\n                            {\r\n                                whitespace: true,\r\n                                message: '请输入合法的用户名！'\r\n                            },\r\n                        ]\r\n                    }>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={\r\n                        [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入密码!',\r\n                            },\r\n                        ]\r\n                    }>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        登陆\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={onReset}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst OverView = () => (\r\n    <div className=\"over-view-div\">\r\n        总览页\r\n    </div>\r\n)\r\n\r\nexport default OverView;\r\n","import axios from '../request';\r\n\r\n\r\nlet baseUrl1 = \"http://localhost:4400/backstage/\"; //地址1\r\nlet baseUrl2 = \"http://localhost:4400/backstage/\"; //地址2\r\n\r\n\r\n// 配置生产环境\r\nif (process.env.NODE_ENV === \"production\") {\r\n    baseUrl1 = baseUrl2 = \"http://localhost:4400/backstage/\"\r\n}\r\n\r\nconst api = {\r\n\r\n    // get 传参 {params}  |   post 传参 params\r\n\r\n    // 文章模块接口\r\n    article: {\r\n\r\n        /** ------- 文章类型接口：开始 ------- **/\r\n        // 获取文章类型接口\r\n        getTypeList: params=>{\r\n            return axios.get(`${baseUrl1}article/queryType`, {params});\r\n        },\r\n\r\n        // 新增文章类型接口\r\n        addType: params=>{\r\n            return axios.post(`${baseUrl1}article/addType`,params)\r\n        },\r\n\r\n        // 编辑文章类型接口\r\n\r\n        // 删除文章类型接口\r\n        deleteType: params=>{\r\n            return axios.get(`${baseUrl1}article/deleteType`, {params});\r\n        },\r\n        /** ------- 文章类型接口：结束 ------- **/ \r\n\r\n        /** ------- 文章标签接口：开始 ------- **/\r\n        // 获取文章标签类列表接口\r\n        getTagsList: params=>{\r\n            return axios.get(`${baseUrl1}article/queryTags`, {params});\r\n        },\r\n        \r\n        // 新增文章标签类列表接口\r\n        addTag: params=>{\r\n            return axios.post(`${baseUrl1}article/addTag`,params);    \r\n        },\r\n\r\n        // 编辑文章标签类接口\r\n\r\n        // 删除文章标签类接口\r\n        deleteTag: params=>{\r\n            return axios.get(`${baseUrl1}article/deleteTag`, {params});\r\n        },\r\n        /** ------- 文章标签接口：结束 ------- **/\r\n        \r\n        \r\n        /** ------- 文章接口：开始 ------- **/ \r\n        // 文章列表\r\n        getList: params=>{\r\n            return axios.get(`${baseUrl1}article/queryList`, {params});\r\n        },\r\n\r\n        // 新增文章\r\n        add: params=>{\r\n            return axios.post(`${baseUrl1}article/add`, params);\r\n        },\r\n\r\n        // 删除文章\r\n        delete: params => {\r\n            return axios.get(`${baseUrl1}article/delete`, {params});\r\n        },\r\n        /** ------- 文章接口：结束 ------- **/ \r\n\r\n    }\r\n}\r\n\r\nexport default api;","import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Input, Select, Button, Tag, DatePicker, Modal} from 'antd';\r\nimport { IssuesCloseOutlined } from '@ant-design/icons';\r\n\r\nimport marked from 'marked'\r\nimport hljs from \"highlight.js\";\r\n// import 'highlight.js/styles/monokai-sublime.css';\r\nimport 'highlight.js/styles/github.css';\r\n// import 'highlight.js/styles/default.css';\r\n\r\nimport './../../static/css/home/workbench.less';\r\n\r\nimport api from './../../request/api';\r\n\r\nimport Message from './../../components/Message'\r\n\r\n\r\n/**\r\n * @description: 自定义选择标签\r\n * @Date Changed: 2020-08-07\r\n */\r\nfunction tagRender(props) {\r\n    const { label, closable, onClose } = props;\r\n\r\n    /**\r\n     * @description: 取固定随机色\r\n     * @Date Changed: 2020-08-12\r\n     */    \r\n    const ramdomColor = ()=> { \r\n\r\n        let colorArr = [\"#ecf0f1\", \"#81ecec\", \"#74b9ff\", \"#dfe6e9\", \"#ffeaa7\", \"#ff7675\", \"#636e72\", \"#dff9fb\", \"#7ed6df\", \"#95afc0\", \"#00a8ff\", \"#9c88ff\", \"#f5f6fa\", \"#dcdde1\", \"#ff4757\", \"#7bed9f\", \"#1e90ff\", \"#ced6e0\", \"#ff6348\", \"#9980FA\", \"#12CBC4\", \"#fc5c65\", \"#fd9644\", \"#26de81\", \"#2bcbba\", \"#45aaf2\", \"#d1d8e0\", \"#778ca3\", \"#25CCF7\", \"#9AECDB\", \"#F8EFBA\", \"#FC427B\", \"#55E6C1\", \"#1B9CFC\", \"#f53b57\", \"#ff5e57\", \"#ff3f34\", \"#34e7e4\", \"#0fbcf9\", \"#4bcffa\", \"#cd84f1\", \"#ff4d4d\", \"#7efff5\", \"#32ff7e\", \"#18dcff\", \"#7d5fff\", \"#fffa65\"];\r\n\r\n        /**\r\n         * @description: 随机生成0~7的整数\r\n         * @return: \r\n         * @Date Changed: \r\n         */\r\n        let num = (() => {\r\n            let num = parseInt(Math.random()*48);\r\n\r\n            return num;\r\n        })();\r\n        // console.log(\"颜色：\", colorArr[num] , num);\r\n        return colorArr[num];\r\n    }\r\n\r\n    return (\r\n        <Tag color={ramdomColor()} closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n            {label}\r\n        </Tag>\r\n    );\r\n}\r\n\r\nconst Workbench = props => {\r\n    // 页面init数据\r\n    const [typeListData, setTypeListData] = useState([]);\r\n    const [tagsListData, setTagsListData] = useState([]);\r\n    \r\n    const [title, setTitle] = useState(\"\");           // 文章标题\r\n    const [typeData, setTypeData] = useState({});   // 文章分类\r\n    const [tagsData, setTagsData] = useState([]);   // 文章标签\r\n    const [createData, setCreateData] = useState(\"\");   // 文章创建时间\r\n    const [introduce, setIntroduce] = useState(\"\");   // 文章创建时间\r\n    const [content, setContent] = useState(\"\");   // 文章markdown语法主体\r\n    const [mardedContent, setMardedContent] = useState(\"\"); // 文章markdown解析主体\r\n\r\n\r\n\r\n    /**\r\n     * @description: 初始数据接口函数调用\r\n     * @Date Changed: \r\n     */\r\n    useEffect(() => {\r\n        // 页面按键行为监听\r\n        documentKeyEventMonitor();\r\n\r\n        // 文章分类列表\r\n        getTypeListData();\r\n\r\n        // 文章标签列表\r\n        getTagsListData();\r\n\r\n\r\n        return componentWillUnmount;\r\n\r\n    }, []);\r\n\r\n    /*** ------ 组件销毁生命周期函数 ------ ***/ \r\n    const componentWillUnmount = ()=> {\r\n        // 组件销毁时你要执行的代码\r\n        document.onkeydown = null;\r\n    }\r\n\r\n    /*** ------ 页面按键行为监听：开始 ----- ***/ \r\n    const documentKeyEventMonitor = ()=>{\r\n\r\n        document.onkeydown =  event => {\r\n            // Ctrl + s   组合键处理\r\n            if (event.ctrlKey === true && event.keyCode === 83) {\r\n                alert('触发ctrl+s');\r\n                return false;\r\n                //或者  event.preventDefault();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*** ------ 页面按键行为监听：结束 ----- ***/ \r\n\r\n    /*** ------ 初始数据获取函数：开始 ------ ***/ \r\n    /**\r\n     * @description: 获取分类列表\r\n     * @Date Changed: 2020-08-12\r\n     */\r\n    const getTypeListData = () => {\r\n        api.article.getTypeList()\r\n            .then(res=>{\r\n                // console.log( \"文章分类列表响应：\", res );\r\n                if(res.success){\r\n                    const resData = JSON.parse(JSON.stringify(res.entity.list));\r\n\r\n                    let data = resData.length > 0 && resData.map(item=>{\r\n                        return {\r\n                            tid: item.tid,\r\n                            type_name: item.type_name\r\n                        }\r\n                    });\r\n\r\n                    setTypeListData(data);\r\n\r\n                }else{\r\n\r\n                    Message({\r\n                        type: \"error\",\r\n                        info: `文章分类列表获取失败！原因：${res.message}`\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * @description: 获取标签列表\r\n     * @Date Changed: 2020-08-12\r\n     */\r\n    const getTagsListData = () => {\r\n        api.article.getTagsList()\r\n            .then(res=>{\r\n                // console.log( \"获取文章标签列表\", res );\r\n                if( res.success ){\r\n\r\n                    const resData = JSON.parse(JSON.stringify(res.entity.list));\r\n\r\n                    let data = resData.length > 0 && resData.map((item,idx)=>{\r\n                        return {\r\n                            value: item.gid,\r\n                            label: item.label\r\n                        }\r\n                    });\r\n\r\n                    setTagsListData(data);\r\n\r\n\r\n                }else{\r\n                    Message({\r\n                        type: \"error\",\r\n                        info: `获取标签列表失败！原因：${res.message}`\r\n                    });\r\n                }\r\n            })\r\n    }\r\n    /*** ------ 初始数据获取函数：结束 ------ ***/ \r\n\r\n    /**\r\n     * @description: 分类选择框过滤\r\n     * @param {String} input 输入框当前输入的值 \r\n     * @param {JSON} option \r\n     * @Date Changed: 2020-08-02\r\n     */\r\n    const sortFilter = (input, option) =>{\r\n        console.log(\"分类过滤：\", input, option);\r\n        return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    }\r\n\r\n    marked.setOptions({\r\n        renderer: new marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n        highlight: code=>{\r\n            return hljs.highlightAuto(code).value;\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @description: 表单数据提交\r\n     * @Date Changed: 2020-08-13\r\n     */\r\n    const submitArticleData = () => {\r\n\r\n        let {type_id, type_name} = typeData;\r\n\r\n        if( !title ){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"请输入文章标题！\"\r\n            });\r\n            return;\r\n        }else if(title.length >30){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"文章标题不超过30位！\"\r\n            });\r\n            return;\r\n        }else if(!/^[A-Za-z0-9\\u4e00-\\u9fa5-_——]+$/.test(title)){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"文章标题格式不正确！数字、字母、汉字、——、-及_\"\r\n            });\r\n            return;\r\n        }else if( !type_name ){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"请选择文章分类！\"\r\n            });\r\n            return;\r\n        }else if( !tagsData.length ){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"请选择文章标签！\"\r\n            });\r\n            return;\r\n        }else if( !introduce ){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"请输入文章简介！\"\r\n            });\r\n            return;\r\n        }else if( !content ){\r\n            Message({\r\n                type: \"warning\",\r\n                info: \"请输入文章内容！\"\r\n            });\r\n            return;\r\n        }else{\r\n\r\n            let requiredParams = {\r\n                title,\r\n                type_id,\r\n                type_name,\r\n                tagsData,\r\n                createData,\r\n                introduce,\r\n                content\r\n            }\r\n    \r\n            console.log(\"表单提交：\", requiredParams);\r\n            api.article.add(requiredParams)\r\n                .then(res=>{\r\n                    console.log( \"新增文章分类响应：\", res );\r\n                    if( res.success ){\r\n\r\n                        Modal.confirm({\r\n                            title: '发布成功提示',\r\n                            icon: <IssuesCloseOutlined /> ,\r\n                            content: `文章发布成功！是否确认跳转到列表页？`,\r\n                            onOk() {\r\n                                console.log(\"props:\", props);\r\n                                props.history.push('/home/articleList');\r\n                            },\r\n                            onCancel() {\r\n                                console.log('Cancel');\r\n                            }\r\n                        });\r\n\r\n                    }else{\r\n\r\n                        Message({\r\n                            type: \"error\",\r\n                            info: `文章创建失败！原因：${res.message}`\r\n                        });\r\n                        \r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"work-bench-div\">\r\n            <Row gutter={16}>\r\n                {/* 左侧布局：标题、分类 markdown编写、markdown预览*/}\r\n                <Col span={18}>\r\n                    {/* 标题、分类 */}\r\n                    <Row gutter={10} className=\"layout-top\">\r\n                        <Col span={16}>\r\n                            <Input\r\n                                value={title}  \r\n                                onChange={e=>{\r\n                                    // console.log(e.target.value);\r\n                                    setTitle( e.target.value);\r\n                                }}\r\n                                placeholder=\"请输入文章标题\"/>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Select\r\n                                style={{ width: '100%' }}\r\n                                showSearch\r\n                                placeholder=\"请选择分类\"\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={sortFilter}\r\n                                onChange={(e,option)=>{\r\n                                    let {value: type_id,children: type_name} = option;\r\n\r\n                                    setTypeData({\r\n                                        type_id,\r\n                                        type_name\r\n                                    });\r\n                                }}>\r\n                                {\r\n                                    typeListData.map(item=>{\r\n                                        return (\r\n                                            <Select.Option \r\n                                                key={item.tid}\r\n                                                value={item.tid}>\r\n                                                    {item.type_name}\r\n                                            </Select.Option>    \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    {/* markdow编写、markdown预览 */}\r\n                    <Row gutter={16} className=\"layout-markdown\">\r\n                        <Col span={12}>\r\n                            <Input.TextArea \r\n                                className=\"edit-markdown\" \r\n                                rows={35}  \r\n                                placeholder=\"请输入文章内容\"\r\n                                onChange={e=>{\r\n                                    console.log( \"onChage触发~~~~\" );\r\n\r\n                                    // markdown文章主体\r\n                                    setContent(e.target.value);\r\n\r\n                                    // markdown解析html主体【概览】\r\n                                    let html = marked(e.target.value);\r\n                                    setMardedContent(html);\r\n                                }}\r\n                                onKeyDown={e=>{ // 处理按键函数\r\n                                    \r\n                                    if (e.keyCode === 9) {\r\n                                        e.preventDefault();\r\n                                        \r\n                                        console.log( \"tab触发~~~\" );\r\n\r\n                                        let body  = e.target.value + \" tab测试\"; \r\n                                        console.log( body );\r\n                                        // e.returnValue = false;\r\n                                        setContent(body);\r\n\r\n                                    }\r\n                                }}>\r\n                            </Input.TextArea>\r\n\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div \r\n                                className=\"show-markdown\"\r\n                                dangerouslySetInnerHTML = {{__html:mardedContent}}>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n\r\n                {/* 右侧布局：暂存按钮、发布按钮、简介、简介概览、标签、创建时间 */}\r\n                <Col span={6}>\r\n                    {/* 暂存按钮、发布按钮 */}\r\n                    <Row gutter={10} className=\"layout-top\">\r\n                        <Col span={24} className=\"layout-btns\">\r\n                            <Button type=\"primary\" ghost>暂存文章</Button>\r\n                            <Button type=\"primary\" onClick={submitArticleData}>发布文章</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* 文章简介 */}\r\n                    <Row className=\"block\">\r\n                        <Col span={24}>\r\n                            <Input.TextArea\r\n                                rows={6}\r\n                                onChange={e=>{\r\n                                    setIntroduce(e.target.value);\r\n                                }}\r\n                                placeholder=\"请输入文章简介\">\r\n                            </Input.TextArea>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* 文章标签 defaultValue={['gold', 'cyan']}*/}\r\n                    <Row className=\"block\">\r\n                        <Col span={24}>\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                tagRender={tagRender}\r\n                                style={{ width: '100%' }}\r\n                                options={tagsListData}\r\n                                placeholder=\"请选择文章标签\"\r\n                                onChange={(e,option)=>{\r\n                                    // console.log( \"选定的option\" , option );\r\n                                    let tags = option.map(item=>{\r\n                                        return {\r\n                                            gid: item.value,\r\n                                            label: item.label\r\n                                        }\r\n                                    })\r\n                                    setTagsData(tags);\r\n                                }}/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* 文章创建时间 */}\r\n                    <Row className=\"block\">\r\n                        <Col span={24}>\r\n                            <DatePicker \r\n                                className=\"data-picker\"\r\n                                onChange={(date,dateString)=>{\r\n                                    console.log( dateString );\r\n                                    \r\n                                    setCreateData(dateString)\r\n\r\n                                }}\r\n                                placeholder=\"请选择创建时间\"/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Workbench;","import React, {useState, useEffect } from 'react';\r\nimport {Row, Col, Form, Input, Select, Table, DatePicker, Tag, Space, Button, Modal } from 'antd';\r\nimport { SearchOutlined, ReloadOutlined, PlusOutlined, ExclamationCircleOutlined  } from '@ant-design/icons'\r\n\r\n// import axios from './../../../request';\r\nimport api from './../../../request/api';\r\n\r\nimport './../../../static/css/home/articleLess/articleList.less';\r\n\r\nimport Message from '../../../components/Message';\r\n\r\n\r\nconst ArticleList = props => { \r\n    const [form] = Form.useForm();\r\n\r\n    const [tableData,setTableData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(5);\r\n\r\n    /**\r\n     * @description: 获取表格数据\r\n     * @Date Changed: 2020-08-06\r\n     */\r\n    useEffect(() => {\r\n\r\n        // 获取文章列表数据\r\n        getTableListData();\r\n            \r\n    },[])\r\n\r\n    /**\r\n     * @description: 获取表格数据\r\n     * @Date Changed: 2020-08-14\r\n     */ \r\n    const getTableListData = ()=>{\r\n\r\n        api.article.getList()\r\n            .then(res => {\r\n                // console.log( res );\r\n                if( res.success ){\r\n\r\n                    const resData = JSON.parse(JSON.stringify(res.entity.list));\r\n\r\n                    console.log( JSON.parse(resData[0].tags) );\r\n\r\n                    let data = resData.length > 0 && resData.map(item => {\r\n                        return {\r\n                            aid: item.aid,\r\n                            title: item.title,\r\n                            type_id: item.type_id,\r\n                            type_name: item.type_name,\r\n                            introduce: item.introduce,\r\n                            create_time: item.create_time,\r\n                            view_count: item.view_count,\r\n                            tags: !item.tags ? null : JSON.parse(item.tags) //JSON.parse(item.tags)\r\n                        }\r\n                    }); \r\n\r\n                    setTableData(data);\r\n                }\r\n            });\r\n            \r\n    }   \r\n\r\n    /**\r\n     * @description: 路由跳转—— 新增文章页面\r\n     * @Date Changed: 2020-08-14\r\n     */  \r\n    const goAddArticlePage = () => {\r\n        props.history.push(\"/home/workbench\");\r\n    }\r\n\r\n    /**\r\n     * @description: 列表数据：编辑操作\r\n     * @param {Josn} rowData 当前数据\r\n     * @Date Changed: 2020-08-06\r\n     */\r\n    const editArticle = rowData => {\r\n        console.log(\"编辑\", rowData);\r\n    }\r\n\r\n    /**\r\n     * @description: 列表数据：删除操作\r\n     * @param {Josn} rowData 当前数据\r\n     * @Date Changed: 2020-08-17\r\n     */\r\n    const deleteArticle = rowData => {\r\n        console.log( \"删除：\",  rowData );\r\n        let {aid,title} = rowData;\r\n\r\n        Modal.confirm({\r\n            title: `您确认删除文章【${title}】吗？`,\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '当前操作不可逆，请谨慎操作！',\r\n            onOk() {\r\n\r\n                let requiredParams = {aid}\r\n                api.article.delete(requiredParams)\r\n                    .then(res=>{\r\n                        console.log( \"删除确认响应！\" );\r\n                        if(res.success){\r\n                            Message({\r\n                                type: \"success\",\r\n                                info: \"文章删除成功！\"\r\n                            });\r\n\r\n\r\n                            getTableListData();\r\n\r\n\r\n                        }else{\r\n                            Message({\r\n                                type: \"error\",\r\n                                info: `文章删除失败！${res.message}`\r\n                            })\r\n                        }\r\n                    })\r\n\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"article-list-div\">\r\n\r\n            <div className=\"filter-seach\">\r\n                <h3>条件筛选</h3>\r\n                <div className=\"filter-items\">\r\n                    <Form\r\n                        form={form}\r\n                        name=\"advanced_search\"\r\n                        // layout=\"vertical\"\r\n                        onFinish={()=>{}}>\r\n                        <Row gutter={24}>\r\n                            <Col span={6} offset={1}>\r\n                                <Form.Item\r\n                                    name=\"aid\"\r\n                                    label=\"文章编号：\"\r\n                                    style={{marginBottom: \"0px\"}}>\r\n                                    <Input placeholder=\"请输入文章编号\" />\r\n                                </Form.Item>\r\n                            </Col>    \r\n                            <Col span={6}>\r\n                                <Form.Item\r\n                                    name=\"type\"\r\n                                    label=\"文章分类：\"\r\n                                    style={{marginBottom: \"0px\"}}>\r\n                                    <Select>\r\n                                        <Select.Option value=\"demo1\">Demo1</Select.Option>\r\n                                        <Select.Option value=\"demo2\">Demo2</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>  \r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item\r\n                                    name=\"created_time\"\r\n                                    label=\"创建时间：\"\r\n                                    style={{marginBottom: \"0px\"}}>\r\n                                    <DatePicker\r\n                                        style={{width: \"100%\"}} \r\n                                        placeholder=\"请选择日期\"\r\n                                        onChange={()=>{}}/>\r\n                                </Form.Item>  \r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Space>\r\n                                    <Button \r\n                                        type=\"primary\"\r\n                                        icon={<SearchOutlined />}\r\n                                        htmlType=\"submit\">\r\n                                            搜索\r\n                                    </Button>\r\n                                    <Button \r\n                                        type=\"primary\"\r\n                                        icon={<ReloadOutlined />}\r\n                                        onClick={() => {\r\n                                            form.resetFields();\r\n                                        }}>\r\n                                        重置\r\n                                    </Button>\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>   \r\n                    </Form> \r\n                </div>\r\n            </div>\r\n\r\n            <Space direction=\"vertical\"size=\"middle\" style={{width: \"100%\"}}>\r\n\r\n                <div className=\"table-btns\">\r\n                    <Button \r\n                        type=\"primary\" \r\n                        size=\"middle\" \r\n                        icon={<PlusOutlined />}\r\n                        onClick={goAddArticlePage}>\r\n                        新增文章\r\n                    </Button>   \r\n                </div>\r\n\r\n                <Table \r\n                    rowKey={record=>record.aid} \r\n                    columns={[\r\n                        {\r\n                            title: '编号',\r\n                            dataIndex: 'aid',\r\n                            key: 'aid',\r\n                            render: text => <span>{text}</span>,\r\n                        },\r\n                        {\r\n                            title: '标题',\r\n                            dataIndex: 'title',\r\n                            key: 'title',\r\n                        },\r\n                        {\r\n                            title: '分类',\r\n                            dataIndex: 'type_name',\r\n                            key: 'type_name',\r\n                        },\r\n                        {\r\n                            title: '简介',\r\n                            dataIndex: 'introduce',\r\n                            key: 'introduce',\r\n                            render: (text, record) => (\r\n                                <span className=\"introduce\" title={text}>{text}</span>\r\n                            ),\r\n                        },\r\n                        {\r\n                            title: '标签',\r\n                            key: 'tags',\r\n                            dataIndex: 'tags',\r\n                            render: tags => (\r\n                                <div className=\"tags-content\">\r\n                                    {\r\n                                        tags != null && tags.length !== 0 && tags.map(tag => {\r\n                                            let color = tag.label.length > 5 ? 'geekblue' : 'green';\r\n                                            if (tag.label === 'loser') {\r\n                                                color = 'volcano';\r\n                                            }\r\n                                            return (                                                \r\n                                                <Tag color={color} key={tag.gid}>\r\n                                                    {tag.label.toUpperCase()}\r\n                                                </Tag>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            ),\r\n                        },\r\n                        {\r\n                            title: '创建时间',\r\n                            dataIndex: 'create_time',\r\n                            key: 'create_time',\r\n                        },\r\n                        {\r\n                            title: '操作',\r\n                            key: 'action',\r\n                            render: (text, record) => (\r\n                                <Space size=\"middle\">\r\n                                    <span className=\"href_block\" onClick={()=>{editArticle(record)}}>编辑</span>\r\n                                    <span className=\"href_block\" onClick={()=>{deleteArticle(record)}}>删除</span>\r\n                                </Space>\r\n                            ),\r\n                        },\r\n                    ]} \r\n                    dataSource={tableData} \r\n                    pagination={{\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true,\r\n                        current: currentPage,\r\n                        pageSize: pageSize,\r\n                        pageSizeOptions: [5,10,20,50],\r\n                        showTotal: total => `总计： ${total} 项`,\r\n                        onChange: (page, pageSize)=>{\r\n                            // 页码改变的回调，参数是改变后的页码及每页条数\r\n                            // console.log( \"pagination:\",  page ,  pageSize );\r\n                            setCurrentPage(page);\r\n                            setPageSize(pageSize);\r\n                        },\r\n                        onShowSizeChange: (current, size)=>{\r\n                            // pageSize 变化的回调\r\n                            // console.log(\"onShowSizeChange: \", current , size);\r\n                            setCurrentPage(current);\r\n                            setPageSize(size);\r\n                        }\r\n                    }} \r\n                    bordered/>\r\n                \r\n            </Space>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ArticleList;\r\n","import React from 'react';\r\nimport { Modal, Form, Input } from 'antd';\r\n\r\nconst CollectionCreateForm = ({aaa, visible, onCreate, onCancel }) => {\r\n    const [form] = Form.useForm();\r\n    \r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"分类新增\"\r\n            okText=\"提交\"\r\n            cancelText=\"取消\"\r\n            onCancel={()=>{ form.resetFields();onCancel()  }}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(values => {\r\n                        form.resetFields();\r\n                        onCreate(values);\r\n                    })\r\n                    .catch(info => {\r\n                        console.warn('弹窗数据提交失败！原因：', info);\r\n                    });\r\n            }}>\r\n\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"title\"\r\n                    label=\"标题：\"\r\n                    type=\"string\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入分类标题！',\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大长度10'\r\n                        },\r\n                        {\r\n                            whitespace: true,\r\n                            message: '请输入正确格式的分类标题！'\r\n                        }\r\n                    ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item \r\n                    name=\"description\" \r\n                    label=\"分类描述：\"\r\n                    type=\"string\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入分类的描述信息！',\r\n                        },\r\n                        {\r\n                            max: 50,\r\n                            message: '最大长度50'\r\n                        },\r\n                        {\r\n                            whitespace: true,\r\n                            message: '请输入正确格式的分类描述信息！'\r\n                        }\r\n                    ]}>\r\n                    <Input.TextArea rows={3} />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CollectionCreateForm;","import React, {useState, useEffect} from 'react';\r\nimport { Row, Col, Button, Card, Empty, Modal } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport api from './../../../request/api';\r\n\r\nimport './../../../static/css/home/articleLess/sortManagement.less'\r\n\r\nimport Message from '../../../components/Message';\r\nimport CollectionCreateForm from './SortComponents/addSortModal';\r\n\r\n\r\n\r\n\r\n\r\nconst SortManagement = () => {\r\n    const [sortListData, setSortListData] = useState([]);           // 初始列表数据\r\n    const [isShowAddModal, setIsShowAddModal] = useState(false);    // 新增分类弹窗显示/隐藏\r\n    // const [addSortForm] = Form.useForm(); // 新增分类表单数据\r\n\r\n    /**\r\n     * @description: axios封装，获取文章类别列表\r\n     * @Date Changed: 2020-08-09\r\n     */    \r\n    const getListData = async () => {\r\n        \r\n        api.article.getTypeList().then(res => {\r\n            // console.log( res );\r\n            if (res.success) {\r\n\r\n                const resData = JSON.parse(JSON.stringify(res.entity.list));\r\n\r\n                let data = resData.length > 0 && resData.map(item => {\r\n                    return {\r\n                        tid: item.tid,\r\n                        type_name: item.type_name,\r\n                        description: item.description,\r\n                        create_time: item.create_time\r\n                    }\r\n                });\r\n\r\n                setSortListData(data);\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    /**\r\n     * @description: 获取分类列表数据\r\n     * @Date Changed: 2020-08-07\r\n     */\r\n    useEffect(()=>{\r\n\r\n        // 调用获取文章类别列表数据函数\r\n        getListData();\r\n\r\n    },[]);\r\n\r\n    /**\r\n     * @description: 类型- 新增弹窗提交成功的回调\r\n     * @param {JSON} values  \r\n     * @return: \r\n     * @Date Changed: \r\n     */\r\n    const addSort = values => {\r\n\r\n        // console.log('新增成功接收到的参数：', values);\r\n        const { title:type_name, description } = values;\r\n\r\n        api.article.addType({type_name,description})\r\n            .then(res=>{\r\n                console.log( \"新增分类响应：\",res );\r\n                if(res.success){\r\n                    Message({\r\n                        type: \"success\",\r\n                        info: \"添加分类成功！\"\r\n                    });\r\n\r\n                    getListData();\r\n\r\n                }else{\r\n                    Message({\r\n                        type: \"error\",\r\n                        info: `添加分类失败！原因：${res.message}`\r\n                    })\r\n                }\r\n\r\n                setIsShowAddModal(false);\r\n            });\r\n\r\n\r\n\r\n        \r\n    };\r\n    \r\n    /**\r\n     * @description: 类型-信息编辑\r\n     * @param {type} typeInfo\r\n     * @Date Changed: 2020-08-07\r\n     */\r\n    const editType = typeInfo => {\r\n        console.log( \"类型编辑：\", typeInfo );\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @description: 类型-删除\r\n     * @param {type} typeInfo\r\n     * @Date Changed: 2020-08-07\r\n     */\r\n    const deleteType = typeInfo => {\r\n        console.log(\"类型删除：\", typeInfo);\r\n        let {tid, type_name} = typeInfo;\r\n\r\n        Modal.confirm({\r\n            title: '操作',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `你确认删除【${type_name}】文章类别吗？当前操作不可逆！`,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                api.article.deleteType({tid}).then(res => {\r\n                    console.log( res );\r\n                    if (res.success) {\r\n\r\n                        Message({\r\n                            type: 'success',\r\n                            info: \"删除成功！\"\r\n                        });\r\n\r\n                        getListData();\r\n                    }else{\r\n                        Message({\r\n                            type: 'error',\r\n                            info: `删除失败！原因：${res.message}`\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"sort-management-div\">\r\n            <Row className=\"row-block\">\r\n                <Col span={24}>\r\n                    <div className=\"btns-content\">\r\n                        <Button type=\"primary\" onClick={()=>{setIsShowAddModal(true);}}>新增分类</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                {\r\n                    sortListData.length > 0 ? sortListData.map(card => (\r\n                        <Col\r\n                            className=\"card-block\"\r\n                            span={8}\r\n                            key={card.tid}>\r\n                            <Card \r\n                                title={card.type_name} \r\n                                bordered\r\n                                hoverable\r\n                                size=\"small\"\r\n                                actions={[\r\n                                    <div onClick={()=>{editType(card)}}><EditOutlined /> <span>编 辑</span></div>,\r\n                                    <div onClick={()=>{deleteType(card)}}><DeleteOutlined /> <span>删 除</span></div>\r\n                                ]}>\r\n                                <p className=\"desc-label\">描述：</p>\r\n                                <p className=\"desc-content\">{card.description}</p>\r\n                            </Card>\r\n                        </Col>    \r\n                    )) : <Empty className=\"noListData\" image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"暂无数据\"/>\r\n                }\r\n                \r\n            </Row>  \r\n\r\n            {/* 新增分类-弹出窗 */}\r\n            <CollectionCreateForm\r\n                visible={isShowAddModal}\r\n                onCreate={addSort}\r\n                onCancel={() => {\r\n                    setIsShowAddModal(false);\r\n                }}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SortManagement;","/**\r\n  * 自定义【标签组件】\r\n  *   @param {String} label  标签名 \r\n  *   @param {Fun}    deleteTag 删除标签方法 \r\n  *   @param {Fun}    editTag   编辑标签 \r\n  *   功能：\r\n  *\r\n */\r\nimport React from 'react';\r\nimport { Popover, Button, Badge } from 'antd';\r\n\r\nimport './dtag.less';\r\n\r\nconst Dtag = ({label, relevancy, editTag, deleteTag})=>{\r\n    // const [visible, setVisible] = useState(false);\r\n\r\n    // console.log(\"从父组件中接收到的值：\", label);\r\n\r\n    /**\r\n     * @description: 取固定随机色\r\n     * @Date Changed: 2020-08-12\r\n     */    \r\n    const ramdomColor = ()=> { \r\n\r\n        let colorArr = [\"#ecf0f1\", \"#81ecec\", \"#74b9ff\", \"#dfe6e9\", \"#ffeaa7\", \"#ff7675\", \"#636e72\", \"#dff9fb\", \"#7ed6df\", \"#95afc0\", \"#00a8ff\", \"#9c88ff\", \"#f5f6fa\", \"#dcdde1\", \"#ff4757\", \"#7bed9f\", \"#1e90ff\", \"#ced6e0\", \"#ff6348\", \"#9980FA\", \"#12CBC4\", \"#fc5c65\", \"#fd9644\", \"#26de81\", \"#2bcbba\", \"#45aaf2\", \"#d1d8e0\", \"#778ca3\", \"#25CCF7\", \"#9AECDB\", \"#F8EFBA\", \"#FC427B\", \"#55E6C1\", \"#1B9CFC\", \"#f53b57\", \"#ff5e57\", \"#ff3f34\", \"#34e7e4\", \"#0fbcf9\", \"#4bcffa\", \"#cd84f1\", \"#ff4d4d\", \"#7efff5\", \"#32ff7e\", \"#18dcff\", \"#7d5fff\", \"#fffa65\"];\r\n\r\n        /**\r\n         * @description: 随机生成0~7的整数\r\n         * @return: \r\n         * @Date Changed: \r\n         */\r\n        let num = (() => {\r\n            let num = parseInt(Math.random()*47);\r\n\r\n            return num;\r\n        })();\r\n        // console.log(\"颜色：\", colorArr[num] , num);\r\n        return colorArr[num];\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n            \r\n\r\n\r\n            {/* 气泡弹出框 */}\r\n            <Popover\r\n                className=\"popover-style\"\r\n                trigger=\"hover\"\r\n                placement=\"topLeft\"\r\n                arrowPointAtCenter\r\n                content={\r\n                    <div className=\"pop-operating\">\r\n                        <Button \r\n                            size=\"small\" \r\n                            type=\"primary\" \r\n                            ghost \r\n                            onClick={()=>{\r\n                                editTag()\r\n                            }}>\r\n                                编辑\r\n                            </Button>\r\n                        <Button size=\"small\" type=\"dashed\" danger onClick={deleteTag}>删除</Button>\r\n                    </div>\r\n                }\r\n                title=\"操作\">\r\n                    <Badge count={`关联文章:${relevancy}`}>\r\n                        <span \r\n                            className=\"dtag-content\" \r\n                            style={{marginLeft: parseInt(Math.random()*40),backgroundColor: ramdomColor()}}>\r\n                                {label}\r\n                        </span>\r\n                    </Badge>\r\n                    \r\n            </Popover>\r\n        </>\r\n    );   \r\n}\r\n\r\nexport default Dtag;","import React from 'react';\r\nimport { Modal, Form, Input } from 'antd';\r\n\r\nconst AddTagModal = ({ visible, addTag, onCancel }) => {\r\n    const [form] = Form.useForm();\r\n    \r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"标签新增\"\r\n            okText=\"提交\"\r\n            cancelText=\"取消\"\r\n            onCancel={()=>{ form.resetFields();onCancel()  }}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(values => {\r\n                        form.resetFields();\r\n                        addTag(values);\r\n                    })\r\n                    .catch(info => {\r\n                        console.warn('弹窗数据提交失败！原因：', info);\r\n                    });\r\n            }}>\r\n\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"label\"\r\n                    label=\"标签名：\"\r\n                    type=\"string\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入标签名！',\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大长度10'\r\n                        },\r\n                        {\r\n                            whitespace: true,\r\n                            message: '请输入正确格式的标签名！'\r\n                        }\r\n                    ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddTagModal;","import React from 'react';\r\nimport { Modal, Form, Input } from 'antd';\r\n\r\nconst AddTagModal = ({ visible, editTagData, editTag, onCancel }) => {\r\n    const [form] = Form.useForm();\r\n    \r\n\r\n    return (\r\n        <Modal\r\n            visible={visible}\r\n            title=\"标签编辑\"\r\n            okText=\"提交\"\r\n            cancelText=\"取消\"\r\n            onCancel={()=>{ form.resetFields();onCancel()  }}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(values => {\r\n                        form.resetFields();\r\n                        editTag(values);\r\n                    })\r\n                    .catch(info => {\r\n                        console.warn('弹窗数据提交失败！原因：', info);\r\n                    });\r\n            }}>\r\n\r\n            <Form\r\n                form={form}\r\n                layout=\"vertical\"\r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"label\"\r\n                    label=\"标签名\"\r\n                    type=\"string\"\r\n                    initialValue={editTagData.label}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入标签名！',\r\n                        },\r\n                        {\r\n                            max: 10,\r\n                            message: '最大长度10'\r\n                        },\r\n                        {\r\n                            whitespace: true,\r\n                            message: '请输入正确格式的标签名！'\r\n                        }\r\n                    ]}>\r\n                    <Input />\r\n                </Form.Item>\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddTagModal;","import React, {useState, useEffect} from 'react';\r\nimport { Row, Col, Button, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport api from './../../../request/api';\r\n\r\nimport Message from '../../../components/Message';\r\n\r\n\r\nimport Dtag from './TagsComponents/Dtag';\r\nimport AddTagModal from './TagsComponents/AddTagModal';\r\nimport EditTagModal from './TagsComponents/EditTagModal';\r\n\r\nimport './../../../static/css/home/articleLess/tagsManagement.less'\r\n\r\nconst TagsManagement = () => {\r\n    const [tagsList, setTagsList] = useState([]);\r\n    const [isShowAddModal, setIsShowAddModal] = useState(false); // 新增标签弹窗显示/隐藏\r\n    const [isShowEditModal, setIsShowEditModal] = useState(false); // 新增标签弹窗显示/隐藏\r\n    const [editDataTo, setEditDataTo] = useState({}); // \r\n    \r\n    useEffect(()=>{\r\n\r\n        getListData();\r\n\r\n    },[])\r\n\r\n    /**\r\n     * @description: axios封装， 获取文章标签类列表\r\n     * @param {type} \r\n     * @return: \r\n     * @Date Changed: 2020-08-12\r\n     */   \r\n    const getListData = () => {\r\n        api.article.getTagsList()\r\n            .then(res=>{\r\n                // console.log( \"获取标签类列表\", res );\r\n                if(res.success){\r\n\r\n                    const resData = JSON.parse(JSON.stringify(res.entity.list));\r\n\r\n                    let data = resData.length > 0 && resData.map(item => {\r\n                        return {\r\n                            gid: item.gid,\r\n                            label: item.label,\r\n                            relevancy: item.relevancy\r\n                        }\r\n                    });\r\n                    setTagsList(data);\r\n                }else{\r\n                    Message({\r\n                        type: \"error\",\r\n                        info: `获取标签类列表失败！原因：${res.message}`\r\n                    })\r\n                }\r\n            })\r\n    }; \r\n\r\n    /**\r\n     * @description: 类型- 新增弹窗提交成功的回调\r\n     * @param {JSON} values  \r\n     * @return: \r\n     * @Date Changed: \r\n     */\r\n    const addTag = values => {\r\n\r\n        // console.log('新增成功接收到的参数：', values);\r\n        const { label } = values;\r\n\r\n        api.article.addTag({label})\r\n            .then(res=>{\r\n                // console.log( \"新增标签类响应：\",res );\r\n                if(res.success){\r\n                    Message({\r\n                        type: \"success\",\r\n                        info: \"新增标签类成功！\"\r\n                    });\r\n\r\n                    getListData();\r\n\r\n                }else{\r\n                    Message({\r\n                        type: \"error\",\r\n                        info: `新增标签类失败！原因：${res.message}`\r\n                    })\r\n                }\r\n\r\n                setIsShowAddModal(false);\r\n            });\r\n\r\n\r\n\r\n        \r\n    };\r\n\r\n    /**\r\n     * @description: 标签- 打开编辑弹出窗控制函数\r\n     * @param {JSON} tagData 当前标签的相关数据\r\n     * @Date Changed: 2020-08-12\r\n     */    \r\n    const editTag = tagData => {\r\n        // console.log(\"打开编辑弹窗~\", tagData);\r\n        setIsShowEditModal(true);\r\n        setEditDataTo(tagData);\r\n    }\r\n\r\n    /**\r\n     * @description: 标签- 关闭编辑弹出窗后的回调函数\r\n     * @param {JSON} values 表单回调的参数\r\n     * @Date Changed: 2020-08-12\r\n     */\r\n    const editTagCallback = values => {\r\n        console.log( \"编辑弹窗关闭后的回调\", values );\r\n    }\r\n\r\n    /**\r\n     * @description: 标签- 删除\r\n     * @param {JOSN} tagData 当前点击的标签类的数据\r\n     * @Date Changed: 2020-08-12\r\n     */\r\n    const deleteTag = tagData => {\r\n        const {gid,label} = tagData;\r\n\r\n        Modal.confirm({\r\n            title: '操作',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: `你确认删除【${label}】文章标签类吗？当前操作不可逆！`,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk() {\r\n                api.article.deleteTag({gid}).then(res => {\r\n                    // console.log( res );\r\n                    if (res.success) {\r\n\r\n                        Message({\r\n                            type: 'success',\r\n                            info: \"删除成功！\"\r\n                        });\r\n                        \r\n                        // 刷新列表数据\r\n                        getListData();\r\n                    }else{\r\n                        Message({\r\n                            type: 'error',\r\n                            info: `删除失败！原因：${res.message}`\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"tags-manangement-div\">\r\n\r\n            <Row className=\"row-block\">\r\n                <Col span={24}>\r\n                    <div className=\"btns-content\">\r\n                        <Button type=\"primary\" onClick={()=>{setIsShowAddModal(true);}}>新增标签</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>  \r\n            <Row gutter={16}>\r\n\r\n                {\r\n                    tagsList.length > 0 && tagsList.map((tag, idx) => {\r\n                        return (\r\n                            <Dtag\r\n                                key={idx}\r\n                                label={tag.label}\r\n                                relevancy={tag.relevancy}\r\n                                deleteTag={()=>{deleteTag(tag)}}   \r\n                                editTag={()=>{editTag(tag)}}/> \r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Row>\r\n\r\n            {/* 新增标签-弹出窗 */}\r\n            <AddTagModal\r\n                visible={isShowAddModal}\r\n                addTag={addTag}\r\n                onCancel={() => {\r\n                    setIsShowAddModal(false);\r\n                }}/>\r\n\r\n            {/* 新增标签-弹出窗 */}\r\n            <EditTagModal\r\n                visible={isShowEditModal}\r\n                editTagData={editDataTo}\r\n                editTag={editTagCallback}\r\n                onCancel={() => {\r\n                    setIsShowEditModal(false);\r\n                }}/>\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default TagsManagement;","import React from 'react';\r\nimport { Switch, Route} from \"react-router-dom\";\r\n\r\n/** ------ 概览 ------ **/\r\nimport OverView from './OverView';\r\n\r\n/** ------  ------ **/ \r\nimport Workbench from './Workbench';\r\n\r\n\r\n/** ------ 文章管理：开始 ------ **/ \r\nimport ArticleList from './Article/ArticleList';\r\nimport SortManagement from './Article/SortManagement';\r\nimport TagsManagement from './Article/TagsManagement';\r\n\r\n/** ------ 文章管理：结束 ------ **/\r\n\r\n\r\n\r\nfunction HomeRouter(){\r\n    return (\r\n        <Switch>     \r\n            <Route path=\"/home/overView\" component={OverView} />\r\n            <Route path=\"/home/workbench\" component={Workbench} />\r\n            <Route path=\"/home/articleList\" component={ArticleList} />\r\n            <Route path=\"/home/sortManagement\" component={SortManagement} />\r\n            <Route path=\"/home/tagsManagement\" component={TagsManagement} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default HomeRouter","import React, {useState, useEffect} from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Layout, Menu, Breadcrumb, Row, Col, Avatar, Dropdown } from 'antd';\r\nimport {  AppstoreOutlined, FormOutlined, DiffOutlined, UserOutlined, BoldOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport '../static/css/Index.less';\r\n\r\nimport HomeRouter from './home/HomeRouter';\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    /* ------ 数据初始化 ------ */ \r\n    const [userInfo,setUserInfo] = useState({});\r\n\r\n\r\n    /**\r\n     * @description:  \r\n     * @Date Changed: \r\n     */\r\n    useEffect(()=>{\r\n        // console.log(\"userEffect\", localStorage.getItem(\"userInfo\"));\r\n        let userData = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n        setUserInfo(userData);\r\n\r\n    },[])\r\n\r\n    /**\r\n     * @description: 头部下拉框点击事件\r\n     * @param {type} \r\n     * @Date Changed: \r\n     */\r\n    const perCenterClick = e => {\r\n        // console.log(\"...handleMenuClick\",e);\r\n\r\n        switch(e.key){\r\n            case 'perCenter':\r\n                break;\r\n            default:\r\n                sessionStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"userInfo\");\r\n                props.history.replace(\"/\");\r\n                break;\r\n        }\r\n\r\n        // console.log(props);\r\n\r\n        \r\n\r\n    }\r\n\r\n    /** ------ ------ **/\r\n    /**\r\n     * @description: 头部下拉弹出窗\r\n     * @Date Changed: 2020-08-06\r\n     */\r\n    const headerDropMenuNode = (\r\n        <Menu onClick={perCenterClick}>\r\n            <Menu.Item key=\"perCenter\">个人中心</Menu.Item>\r\n            <Menu.Item key=\"loginOut\">退出</Menu.Item>\r\n        </Menu>\r\n    ); \r\n    /** ------ ------ **/ \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"index-div\">\r\n            \r\n            <Layout>\r\n                {/* 一、侧边栏 */}\r\n                <Layout.Sider\r\n                    breakpoint=\"lg\"\r\n                    collapsedWidth=\"0\">\r\n\r\n                    {/* 1.1 logo */}\r\n                    <div className=\"logo\">\r\n                        <p className=\"logo-title\">\r\n                            <span className=\"first-span\">D</span>\r\n                            <span>arkcity_X</span>\r\n                        </p>\r\n                        <p className=\"logo-text\">博客后台管理系统</p>\r\n                        \r\n                    </div>\r\n                    \r\n                    {/* 1.2 导航 */}\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                        <Menu.Item key=\"1\" icon={<AppstoreOutlined />}>\r\n                            <Link to=\"/home/overView\">\r\n                                总览    \r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"2\" icon={<FormOutlined />}>\r\n                            <Link to=\"/home/workbench\">\r\n                                工作台    \r\n                            </Link>\r\n                        </Menu.Item>\r\n\r\n                        {/* <Menu.Item key=\"3\" icon={<DiffOutlined />}>\r\n                            <Link to=\"/home/articleList\">\r\n                                文章管理\r\n                            </Link>\r\n                        </Menu.Item> */}\r\n\r\n                        <Menu.SubMenu key=\"3\" icon={<DiffOutlined />} title=\"文章管理\">\r\n                            <Menu.Item key=\"3-1\">\r\n                                <Link to=\"/home/articleList\">\r\n                                    文章列表\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"3-2\">\r\n                                <Link to=\"/home/sortManagement\">\r\n                                    分类管理\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"3-3\">\r\n                                <Link to=\"/home/tagsManagement\">\r\n                                    标签管理\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                        </Menu.SubMenu>\r\n\r\n                        <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n                            用户管理\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"5\" icon={<BoldOutlined />}>\r\n                            博主管理\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Layout.Sider>\r\n\r\n                {/* 二、右边视图区 */}\r\n                <Layout>\r\n                    {/* 2.1、 头部 */}\r\n                    <Layout.Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }}>\r\n                        <Row>\r\n                            <Col className=\"header-right\" span={4} offset={20}>\r\n                                {/* 2.1.1 头像 */}\r\n                                <Avatar \r\n                                    className=\"avater\"\r\n                                    size=\"large\" \r\n                                    icon={<UserOutlined />} \r\n                                    src=\"http://localhost:3300/public/cc.jpg\" />\r\n                                \r\n                                {/* 2.1.2 下拉操作 */}\r\n                                <Dropdown\r\n                                    className=\"oprater\" \r\n                                    overlay={headerDropMenuNode} \r\n                                    trigger={['click']}>\r\n                                    <span className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        {userInfo.nickname} <DownOutlined />\r\n                                    </span>\r\n                                </Dropdown>\r\n                            </Col>\r\n                        </Row>\r\n                    </Layout.Header>\r\n\r\n                    {/* 2.2、主体 */}\r\n                    <Layout.Content style={{ margin: '0 16px' }}>\r\n\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n\r\n                        <div className=\"site-layout-background\" style={{ padding: 16 }}>\r\n                            \r\n                            <HomeRouter />\r\n\r\n                        </div>\r\n                    </Layout.Content>\r\n\r\n                    {/* 2.3、页脚 */}\r\n                    <Layout.Footer style={{ textAlign: 'center' }}>\r\n                        blogAdmin ©2020 Created by darkcity_x\r\n                    </Layout.Footer>\r\n\r\n                </Layout>\r\n            </Layout>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nimport Login from './Login';\r\nimport Home from './Home';\r\n\r\nfunction Main(){\r\n    return (\r\n        <Router>      \r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/home/\" component={Home} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.less';\nimport Main from './pages/Main';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            \n            <Main />\n            \n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\n\n// import moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/locale/zh_CN';\n// moment.locale('zh-cn');\n\n\nimport { ConfigProvider } from 'antd';\n\nReactDOM.render(\n//   <React.StrictMode>\n    <ConfigProvider locale={locale}>\n        <App />\n    </ConfigProvider>,\n//   </React.StrictMode>\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}